package{	import app.Background;	import app.MenuButtonMain;	import app.NavigationBar;		import com.greensock.*;	import com.greensock.easing.*;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.*;	import com.greensock.loading.display.*;		import fl.events.*;		import flash.display.*;	import flash.events.*;	import flash.text.*;			public class main extends MovieClip	{		//Tile		var tiledBg:BitmapData=new Tile(0,0);		var bg:Sprite = new Sprite();				//Line		var line:Sprite = new Sprite();				//Loadermax preloaders		var _loader:LoaderMax;		var _mainSWF:SWFLoader;										//public var bg:Background = new Background();				public function main()		{			OverwriteManager.init();			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage, false, 0, true);		}				private function init ():void{				//stage.addEventListener(Event.RESIZE, handleStageResize);				//	createNavigation();								}		private function onAddedToStage(e:Event):void{			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;			removeEventListener(Event.ADDED_TO_STAGE, onAddedToStage);			createMainBackground();			createMainAssets();						var _loader:LoaderMax = new LoaderMax({name:"mainQueue",onProgress:progressHandler, onComplete:completeHandler, noCache:true, dispose:false});			_mainSWF = new SWFLoader("main.swf", {name:"mainSWF"});						stage.addEventListener(Event.RESIZE, handleStageResize, false, 0, true);			//_stageW = Math.round(stage.stageWidth);			//_stageH = Math.round(stage.stageHeight);					//loadXML();			//onStageResize();									_loader.append( _mainSWF );			_loader.load();					}			function loaderInitHandler(event:LoaderEvent):void {						//loaderSquare.visible=true;											}				function progressHandler(event:LoaderEvent):void {			trace("progress: " + event.target.progress);					this.progress_mc.progressBar_mc.scaleX = event.target.progress;		}				function completeHandler(event:LoaderEvent):void {			//TweenLite.to(loaderSquare,1,{alpha:0, ease:Expo.easeIn});			trace("AFSLUTTET");			createNavigation();			trace("NU ER DET SLUT");			gotoAndPlay(2);		}						function errorHandler(event:LoaderEvent):void {					}								public function createNavigation():void{						var appData:Array = ["Work", "About"];			var navBar:NavigationBar = new NavigationBar(appData);			addChild(navBar);					//	var bg: Background = new Background();	//		stage.addChildAt(bg,0);	//		bg.visible=false;		//	bg.visible=false;	//		bg.showBg();								}								public function createMainBackground():void{			bg.graphics.beginBitmapFill(tiledBg, null, true, false);			bg.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight);			bg.graphics.endFill();			bg.alpha=0.1;			addChildAt(bg,0);					}		private function createMainAssets():void{						line.graphics.beginFill(0x000000,1);			line.graphics.drawRect(0,stage.stageHeight-15,stage.stageWidth,15);			line.graphics.endFill();			addChild(line);								}	//UTILITY: StageResize						public function handleStageResize(e:Event):void{						bg.graphics.clear()			bg.graphics.beginBitmapFill(tiledBg, null, true, false);			bg.graphics.drawRect(0, 0, stage.stageWidth, stage.stageHeight);			bg.graphics.endFill();						line.graphics.clear();			line.graphics.beginFill(0x000000,1);			line.graphics.drawRect(0,stage.stageHeight-15,stage.stageWidth,15);			line.graphics.endFill();			trace(stage.width+"  "+ stage.stageHeight+"   MAIN");		}			}//class}//package